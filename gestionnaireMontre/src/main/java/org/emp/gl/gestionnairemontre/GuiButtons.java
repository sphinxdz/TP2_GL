/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.emp.gl.gestionnairemontre;

import org.emp.gl.core.lookup.Lookup;
import org.emp.gl.timer.service.TimerChangeListener;

/**
 *
 * @author macos
 */
public class GuiButtons extends javax.swing.JFrame {

    /**
     * Creates new form GuiButtons
     */
    public GuiButtons() {
        initComponents();
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        setVisible( true );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Config = new javax.swing.JButton();
        Mode = new javax.swing.JButton();
        Increment = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        Config.setBackground(new java.awt.Color(153, 255, 51));
        Config.setForeground(new java.awt.Color(255, 51, 51));
        Config.setText("Config");
        Config.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfigActionPerformed(evt);
            }
        });
        getContentPane().add(Config);
        Config.setBounds(100, 52, 197, 44);

        Mode.setText("Mode");
        Mode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModeActionPerformed(evt);
            }
        });
        getContentPane().add(Mode);
        Mode.setBounds(100, 128, 197, 45);

        Increment.setText("Increment");
        Increment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IncrementActionPerformed(evt);
            }
        });
        getContentPane().add(Increment);
        Increment.setBounds(100, 205, 197, 41);

        setBounds(50, 350, 400, 328);
    }// </editor-fold>//GEN-END:initComponents

    private void ModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModeActionPerformed
        // TODO add your handling code here:
         MyWatch modeA= (MyWatch) Lookup.getInstance().getService(ActionsGui.class);
        modeA.modeAction();
    }//GEN-LAST:event_ModeActionPerformed

    private void IncrementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IncrementActionPerformed
        // TODO add your handling code here:
        MyWatch incrementA= (MyWatch) Lookup.getInstance().getService(ActionsGui.class);
        incrementA.incrementAction();
    }//GEN-LAST:event_IncrementActionPerformed

    private void ConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfigActionPerformed
        // TODO add your handling code here:
        MyWatch configA= (MyWatch) Lookup.getInstance().getService(ActionsGui.class);
        configA.configAction();
    }//GEN-LAST:event_ConfigActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Config;
    private javax.swing.JButton Increment;
    private javax.swing.JButton Mode;
    // End of variables declaration//GEN-END:variables
}
